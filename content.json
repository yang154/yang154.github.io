{"meta":{"title":"吱呜猪","subtitle":"吱呜猪の博客","description":"  我 | 单片机 | python","author":"吱呜猪","url":"http://yang154.github.io","root":"/"},"pages":[{"title":"","date":"2022-01-22T05:05:33.582Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"http://yang154.github.io/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"404.html","permalink":"http://yang154.github.io/404.html","excerpt":"","text":""},{"title":"","date":"2022-01-22T05:05:33.582Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"http://yang154.github.io/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"archives/index.html","permalink":"http://yang154.github.io/archives/index.html","excerpt":"","text":""},{"title":"放松一下","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/index.html","permalink":"http://yang154.github.io/List/index.html","excerpt":"","text":"影音资源共享"},{"title":"about","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"about/index.html","permalink":"http://yang154.github.io/about/index.html","excerpt":"","text":""},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"census/index.html","permalink":"http://yang154.github.io/census/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"categories/index.html","permalink":"http://yang154.github.io/categories/index.html","excerpt":"","text":""},{"title":"留言板","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"contact/index.html","permalink":"http://yang154.github.io/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 Luckeyの友链信息 博客名称: Luckeyの博客 博客网址: http://www.luckyzmj.cn 博客头像: https://s1.ax1x.com/2020/05/17/YRWsYT.png 博客介绍: The harder you work, the luckier you will be"},{"title":"友链","date":"2019-07-19T08:42:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"friends/index.html","permalink":"http://yang154.github.io/friends/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"resource/index.html","permalink":"http://yang154.github.io/resource/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"tags/index.html","permalink":"http://yang154.github.io/tags/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-01-22T05:05:33.462Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/index.html","permalink":"http://yang154.github.io/List/galleries/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/movies/index.html","permalink":"http://yang154.github.io/List/movies/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/music/index.html","permalink":"http://yang154.github.io/List/music/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/tools/index.html","permalink":"http://yang154.github.io/List/tools/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2022-01-22T05:05:33.462Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"http://yang154.github.io/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2022-01-22T05:05:33.462Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"http://yang154.github.io/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2022-01-22T05:05:33.462Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"http://yang154.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2022-01-22T05:05:33.462Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"http://yang154.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"http://yang154.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"http://yang154.github.io/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"http://yang154.github.io/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"http://yang154.github.io/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"http://yang154.github.io/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"http://yang154.github.io/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"http://yang154.github.io/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2022-01-22T05:05:33.472Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"http://yang154.github.io/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"假期作业","date":"2022-02-04T07:31:55.546Z","updated":"2022-02-04T18:20:17.064Z","comments":true,"path":"posts/0.html","link":"","permalink":"http://yang154.github.io/posts/0.html","excerpt":"","text":"假期作业用自己的理解,说说什么是编程语言,它的作用是什么?1.编程语言是人和计算机进行沟通交流的工具。 2.它的作用是人，通过编程语言这个工具和各种机器连接起来， 把代码、指令传输给电脑，让电脑实现相应的功能。为我们所用我新买了台电脑,还没有安装python环境,一般有什么渠道可以下载python环境?1.官网下载 2.群里上传的网盘里面 3.搜索引擎搜索python，有各种下载渠道列举出关于’提问的艺术’的三种正确做法或错误做法:错误做法： 1：在吗在吗 2：不说情况，直接问我这边有问题，你帮我看一下 3：有没有人帮我解决个问题用print()输出自己最喜欢的3部电影或3首音乐 用input()输入自己最喜欢的歌手或演员,明星 python里面,布尔类型只有两个值,分别是:_和 _,其中_可以表示1,_还可以表示0分别是False和True, True表示1,False表示0. 运行代码如下,结果会是什么?为什么?1+’1’结果会报错,显示unsupported operand type(s) for +: 'int' and 'str', 因为int型的数据不能和str型数据相加,即数字和字符不能相加我有一个数据,不知道它是什么类型的,怎么才能知道它的类型?可以使用print(type(数据)),这样就可以输出该数据的类型列表和元祖的核心区别是?列表和元组的核心区别是,元组的数据不可修改,而列表可以在python中,注释有几种方式?分别是什么注释?怎么注释?注释方式有两种 1.单行注释 #后面的均为注释内容 # 注释内容 2.多行注释 三个单引号或者双引号里面的均为注释内,多行注释本质是违背使用的多行字符串 ''' 注释内容 ''' \"\"\" 注释内容 \"\"\" 字符串的表现形式为,用一对___包裹起来的数据 单引号/双引号 列表的表现形式为,用一对___包裹起来的数据,中间的数据用逗号(,)隔开 中括号 元祖的表现形式为,用一对___包裹起来的数据中间的数据用逗号(,)隔开 小括号 在转义字符中,我想要换行我应该用___来实现 \\n 数据类型的作用就是为了帮助我们更好管理操作数据,请结合生活中的例子,给以下生活中的名词匹配合适的数据类型. 例: 年龄 —&gt; int类型 提示:囊括了目前学习的所有数据类型, 数值类型+序列类型1. 身高 --&gt; float类型 2. 姓名 --&gt; str类型 3. 性别 --&gt; str类型 4. 苹果数量 --&gt; int类型 5. 大家很棒 --&gt; str类型 6. 学员名册 --&gt; list类型 7. 房屋登记表 --&gt; tuple类型 8. 是否打过第三针疫苗 --&gt; bool类型 你现在遇到了一个bug,你应该怎么操作? () 多选题 A. 找七零老师:老麟,在吗? B. 找七零老师: 老师,我这里有个bug,你现在有空看吗? C. 找七零老师: 老师,我遇到了个bug,我想实现XX功能,但是这里面报错了.显示XX,请问我该怎么解决? D. 先用翻译软件查看报错原因,再进行检查和百度.解决无果,给七零老师私聊提问. CD 以下声明变量,哪个是不合法的,为什么? () (1)name = “麒麟” (2)user-age = 18 (3)123^abc = 999 (4)UserLevel = 99 (5)大家很棒 = “True” (6)heIGHT = 177.5(2) 变量名不能包含数学运算符 (3) 变量名数字不能开头,不能包含逻辑运算符 当需要在字符串中使用特殊字符时,python是用什么符号作为转义字符? ( ) A.\\ B./ C.# D.% A. \\ 现有字符串内容如下(“2022700126”) 字符串中里的7,它的正向下标与逆向下标分别是? 请用切片操作,得到7001 请用步长操作,得到22061. 7的正向下标为4,逆向下标为-6 用input赋值的方式,声明4个变量name,age,job,sex(姓名,年龄,工作,性别).并把这四个变量保存到一个列表中.并输出姓名,年龄,工作 判断题: python中,运行print(True + 1 )结果为2 ( 对 ) 当打开idle时,默认进入的是\"脚本模式\" ( 错 )交互模式 在后续开发项目时时,写的比看得多 ( 错 ) 序列类型下标是从1开始的 ( 错 ) 0开始 定义列表时,不能在里面放入元组数据 ( 错 ) f-str,占位符,format属于格式化输出 ( 对 )","categories":[],"tags":[]},{"title":"python笔记","slug":"python笔记","date":"2022-01-22T16:00:00.000Z","updated":"2022-01-24T12:49:30.368Z","comments":true,"path":"posts/c00b24b1.html","link":"","permalink":"http://yang154.github.io/posts/c00b24b1.html","excerpt":"","text":"什么是编程语言自然语言(汉语,粤语,德语) --&gt; 人和人之间进行沟通交流的工具 编程语言(java,python,c++) --&gt; 人和计算机进行沟通交流的工具 基本输入输出（IO —&gt; 输入输出）1. print --&gt; 输出语句 2. input --&gt; 输入语句 语法规则: input() #运行程序之后,程序会暂停.等你输入东西,直到你按下回车才继续执行 input('提示内容') # 这里放得是提示内容,而不是结果 开发模式:1.交互模式: 默认进入idle/python环境就是交互模式.表现形式就是每一行前面有&gt;&gt;&gt;， 交互模式的优点就是比较简单,轻便.适合写一些简短的代码,测试代码.但不适合写正式代码 2.脚本模式(文件模式): 把python代码,写到一个文件里.再运行,更好修改,保存. 注释1.单行注释 --&gt; 用#符号来表示.在#后的内容都视作为注释 代码内容 # 注释内容 2.多行注释: 用三对单引号/双引号包裹起来的内容 ''' 注释内容 '''|| \"\"\" 注释内容 \"\"\" 多行注释 --&gt; 没有被使用的三引号字符串 变量一个变量是由三种东西组成 1.数据类型(type) 2.内存地址(id) 3.值(value) 变量命名规则:1.一般由数字,字母,下划线组成(可以用中文,但不推荐) 2.首字符不能是数字,不能数字开头 3.不能有别的特殊符号 4.变量名区分大小写 5.不能用/不推荐用关键字/带有特别含义的数据命名 6.见名知意 --&gt; 看到这个变量名就知道它是干嘛用的 命名规范1.驼峰命名法:单词首字母大写,提高代码阅读性 UserName --&gt; 用户名 UserMoney --&gt; 用户金额 2.匈牙利命名法: 数据类型,作用域,变量名用下划线分隔开_ g_iUserAge --&gt; 全局的int类型的用户年龄 g = global --&gt; 全局 i = int --&gt; 整型 UserAge --&gt; 变量名,用户年龄 变量的使用1.声明变量: 把右边的数据,赋值给左边的变量名 变量名 = 变量值 2.使用变量 直接输出变量 print(变量) print(变量1,变量2) 输入变量 name = input('你的名字') # 把你输入的数据,赋值给这个变量 print(name) 变量的本质 —&gt; 存储数据,方便以后使用 基本数据类型Source Insight 4.0","categories":[],"tags":[],"author":"吱呜猪"},{"title":"stm32笔记","slug":"stm32笔记","date":"2022-01-22T16:00:00.000Z","updated":"2022-02-04T07:19:10.597Z","comments":true,"path":"posts/bad7aa47.html","link":"","permalink":"http://yang154.github.io/posts/bad7aa47.html","excerpt":"","text":"芯片构成STM32系统结构框图 一 .寄存器1 存储器映射存储器不具有地址信息，地址由用户或者芯片厂商分配，给存储器分配地址的过程被称为存储器映射。 2 寄存器映射给存储器分配地址的过程叫存储器映射，再分配一个地址叫重映射。 在51单片机中，利用sfr和sbit关键字，实现的存储器映射 在stm32中，利用指针和宏定义实现寄存器映射 存储器地址 + 总线基地址 +外设基地址 + 外设寄存器地址= 寄存器的绝对地址存储器地址： Block0 --- Code （片内FLASH） Block1 --- SRAM Block2 --- 控制片上外设 Block3 --- FSMC的bank1~bank2 Block4 --- FSMC的bank3~bank4 Block5 --- FSMC寄存器 Block6 --- 没有使用 Block7 --- Cortex-M3的内部使用 总线基地址： APB1总线 APB2总线 AHB总线 外设基地址：GPIO（A~G） AFIO 复位和时钟控制（RCC） EXIT ADC ……………… 外设寄存器（32位）：CRL---------GPIO 端口配置低寄存器 CRH---------GPIO 端口配置高寄存器 IDR---------GPIO 数据输入寄存器 ODR---------GPIO 数据输出寄存器 BSRR--------GPIO 位设置/清除寄存器 BRR---------GPIO 端口位清除寄存器 LCKR--------GPIO 端口配置锁定寄存器 RCC_CR----------时钟控制寄存器 RCC_CFGR--------时钟配置寄存器 RCC_CIR---------时钟中断寄存器 RCC_APB1/APB2/AHB ENR---外设时钟使能寄存器 RCC_APB1/APB2 RSTR---外设复位寄存器 RCC_BDCR--------备份域控制寄存器 RCC_CSR---------控制/状态寄存器 ……………… 二 .新建工程模板1 Startup-&gt;启动文件 2 user-&gt;用户程序（包括主函数） 3 Library-&gt;内部功能的基本函数库 4 Hardware-&gt;外部硬件的驱动程序 5 System-存放系统资源 6 CMSIS-&gt;内核驱动程序 axf文件是通过编译器烧录程序的文件 hex文件是串口烧录软件使用的文件 三 .寄存器应用 STM32F103C8T6引脚定义 VDD-&gt;正电源 VBAT-&gt;正电源 VSS-&gt;接地 GPIO结构图 GPIO——-通用输入输出端口:软件可控制的引脚在STN32固件库中用枚举（enum）来配置 GPIO的模式GPIO输出：通用推挽输出-&gt;GPIO_Mode_Out_PP 1. 推：输出高电平，电流流出到负载，灌电流. 2. 挽：输出低电平，电流流向芯片，拉电流. 通用开漏输出-&gt;GPIO_Mode_Out_OD 1. 只能输出低电平，不能输出高电平. 2. 具有“线与”功能，一个为低，全部为低，用于I2C和SMBUS总线. 复用推挽输出-&gt;GPIO_Mode_AF_PP 通用开漏输出-&gt;GPIO_Mode_Out_ODGPIO输入（ L: &lt;1.2V ; H: &gt;2.0V）: 模拟输入-&gt;GPIO_Mode_AIN 浮空输入-&gt;GPIO_Mode_IN_FLOATING 上拉输入-&gt;GPIO_Mode_IPU 下拉输入-&gt;GPIO_Mode_IPD GPIO的速度选择:bit1 bit0输入模式（复位后的状态）-&gt;00 输出最大速度为10MHZ-&gt;GPIO_Speed_10MHz-&gt;01 输出最大速度为2MHZ-&gt;GPIO_Speed_2MHz-&gt;10 输出最大速度为50MHZ-&gt;GPIO_Speed_50MHz-&gt;11 stm32固件库分析 汇编编写的启动文件startup_stm32f10x_hd.s:设置堆栈指针、设置pc指针、初始化中断向量表、配置系统时钟、调用c库函数_main最终去到c的世界 时钟配置文件 system_stm32f10x.c:把外部时钟HSE=8M，经过PLL倍频为72M。 外设相关的 stm32f10x.h:实现了内核之外的外设的寄存器映射 xxx:GP1O、USRAT、I2c、SPI、FSMc stm32f10x_xx_c:外设的驱动函数库文件 stm32f10x_xx,h:存放外设的初始化结构体，外设初始化结构体成员的参数列表，外设固件库函数的声明 内核相关的 CMSIS——Cortex:微控制器软件接口标准 core_cm3.h:实现了内核里面外设的寄存器映射 core_cm3.c:内核外设的驱动固件库 NVIC(嵌套向量中断控制器)、sysTick(系统滴答定时器) misc.h:内核的外设,cortex-m3内核经过裁剪的内核外设程序 misc.c 头文件的配置文件 stm32f10x_conf.h:头文件的头文件 stm32f10x_usart.h stm32f10x_i2c.h stm32f10x_spi.h stm32f10x_adc.h stm32f10x_fsmc.h ………… 专门存放中断服务函数的c文件 stm32f10x_it.c stm32f10x_it.h 中断服务函数你可以随意放在其他的地方，并不是一定要放在stm32f10x_it.c EXTI—外部中断/事件控制器EXTI_InitpeDEF1. EXTI_Line:用于产生中断/事件线 2. EXTI_Mode:EXTI模式(中断/事件) 3. EXTI_Trigger:触发(上/下/上下) 4. EXTI_LineCmd:使能或者失能(IMR/EMR) Priority-&gt;中断优先级 ESR-&gt;中断服务程序 中断类型： 系统异常，体现在内核水平 外部中断，体现在外设水平 NVIC嵌套向量中断控制器,属于内核外设,管理这包括内核和片上外设所有外设的中断相关的功能NVIC寄存器简介,core_cm3.h中的结构体定义: ISER:中断使能寄存器 ICER:中断清除寄存器 ISPR:中断使能悬起寄存器 ICPR：中断七年给出悬起寄存器 IABR：中断有效位寄存器 IP：中断优先级寄存器（8Bit wide） STIR：软件触发中断寄存器 中断优先级的定义优先级设定:NVIC-&gt;IPRx 优先级分组:SCB-&gt;AIRCR:PRIGROUP[10:8] 优先级分组 抢占(主)优先级 响应(子)优先级 描述 NVIC_PriorityGroup_0 0 0-15 主-0Bite,子-4Bite NVIC_PriorityGroup_1 0-1 0-7 主-1Bite,子-3Bite NVIC_PriorityGroup_2 0-3 0-3 主-2Bite,子-2Bite NVIC_PriorityGroup_3 0-7 0-1 主-3Bite,子-1Bite NVIC_PriorityGroup_4 0-15 0 主-4Bite,子-0Bite 中断编程的顺序 使能中断请求 配置中断优先级分组 配置NVIC寄存器,初始化NVIC_InitTypeDef 编写中断服务函数","categories":[],"tags":[],"author":"吱呜猪"},{"title":"高数笔记","slug":"高数笔记","date":"2022-01-22T16:00:00.000Z","updated":"2022-01-26T07:03:29.244Z","comments":true,"path":"posts/70508bfe.html","link":"","permalink":"http://yang154.github.io/posts/70508bfe.html","excerpt":"","text":"第二节一元函数微分学 定义 求导类型（计算） 应用 一.定义1.导数（瞬时变化率） x的增量:$\\Delta x$ y的增量:$f(x+\\Delta x)-f(x)=\\Delta x$ 变化率:\\dfrac{\\Delta y}{\\Delta x}=\\dfrac{f(x+\\Delta x)-f(x)}{\\Delta x} 瞬时变化率:\\lim\\limits_{\\Delta x\\rightarrow\\mathcal{0}}f(x)= \\lim\\limits_{\\Delta x\\rightarrow\\mathcal{0}}\\dfrac{f(x+\\Delta x)-f(x)}{\\Delta x} (第一定义) x的增量:$x_0-x$ y的增量:$f(x_0)-f(x)$ 变化率:\\dfrac{\\Delta y}{\\Delta x}=\\dfrac{x_0-x}{f(x_0)-f(x)} 瞬时变化率:\\lim\\limits_{x\\rightarrow\\mathcal{x_0}}\\dfrac{f(x_0)-f(x)}{x_0-x}\\triangleq \\lim\\limits_{x\\rightarrow\\mathcal{x_0}}\\dfrac{f(x)-f(x_0)}{x-x_0}(第二定义) 凑导数定义（泛形式）分母=分子内括号差（用于推广） \\lim\\limits_{x\\rightarrow\\mathcal{x_0}}\\dfrac{f(x)-f(x_0)}{x-x_0}\\triangleq f^`(x_0)\\triangleq y^`(x_0)\\triangleq \\dfrac{\\mathrm{d}y}{\\mathrm{d}x} /_{x=x_0}x\\rightarrow0 \\bigg\\{^{\\lim\\limits_{x\\rightarrow\\mathcal{x_0^-}}\\dfrac{f(x)-f(x_0)}{x-x_0}=f^`_-(x_0)}_{\\lim\\limits_{x\\rightarrow\\mathcal{x_0^+}}\\dfrac{f(x)-f(x_0)}{x-x_0}=f^`_+(x_0)}得到f^`(x_0)\\Longleftrightarrow f^`_+(x_0)=f^`_-(x_0)且存在 Q:$连续\\Longleftarrow 可导$一个点的导数值 和 该点切线的斜率相等 （几何意义） y-y_0 =y^`(x_0)(x-x_0)$证明：可导\\Longrightarrow \\lim\\limits_{x\\rightarrow\\mathcal{x_0}}\\dfrac{f(x)-f(x_0)}{x-x_0} 存在，即连续$分母:$\\lim\\limits_{x\\rightarrow\\mathcal{x_0}}(x-x_0)=0$ 因为可导，即极限存在，可得： 分子:$\\lim\\limits_{x\\rightarrow\\mathcal{x_0}}[f(x)-f(x_0)]=0$$x_0为常数，得f(x_0)为常数，$$\\lim\\limits_{x\\rightarrow\\mathcal{x_0}}f(x)=f(x_0)\\Longrightarrow x=x_0处连续$ 二.求导类型（一）常用求导公式……………… （二）求导法则……………… （三）高阶函数求导$ \\bigg\\{^{数学归纳式}_{莱布尼茨展开式}$………………","categories":[],"tags":[],"author":"吱呜猪"},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2022-01-17T17:34:30.000Z","updated":"2022-01-24T05:50:16.359Z","comments":true,"path":"posts/b24dd347.html","link":"","permalink":"http://yang154.github.io/posts/b24dd347.html","excerpt":"","text":"杨杨为什么这么帅yyhs","categories":[],"tags":[]}],"categories":[],"tags":[]}